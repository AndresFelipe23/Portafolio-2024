---

import Layout from '../../layouts/Layout.astro';
import { Icon } from 'astro-icon/components';
import { Image } from 'astro:assets';
import { androidProjects } from '../../data/androidProjects';

export async function getStaticPaths() {
  return androidProjects.map((project) => ({
    params: { slug: project.title.toLowerCase().replace(/\s+/g, '-') },
    props: { project },
  }));
}

const { project } = Astro.props;

---

<Layout title={`${project.title} | Mi Portafolio Android`}>
  <main class="py-20 bg-gradient-to-b from-gray-50 to-white">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Título del proyecto -->
      <header class="text-center mb-16">
        <h1 class="text-4xl sm:text-5xl font-bold text-gray-900 mb-4 animate-fade-in">{project.title}</h1>
        <p class="text-xl text-gray-600 max-w-3xl mx-auto animate-fade-in-up">{project.description}</p>
      </header>

      <!-- Sección de capturas de pantalla -->
      <section class="mb-16" aria-labelledby="screenshots-title">
        <h2 id="screenshots-title" class="text-3xl font-semibold text-gray-900 mb-8 text-center">Capturas de pantalla</h2>
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
          {project.screenshots.map((screenshot, index) => (
            <div class="relative group overflow-hidden rounded-lg shadow-lg transition-all duration-300 hover:shadow-xl">
              <Image
                src={screenshot}
                alt={`${project.title} screenshot ${index + 1}`}
                width={800}
                height={600}
                class="w-full h-auto object-cover transition-transform duration-300 group-hover:scale-105"
                loading="lazy"
              />
              <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-40 transition-opacity duration-300 flex items-center justify-center">
                <button 
                  class="bg-white text-gray-900 px-4 py-2 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                  onclick={`openLightbox('${screenshot}')`}
                >
                  Ver más grande
                </button>
              </div>
            </div>
          ))}
        </div>
      </section>

      <!-- Sección de características principales -->
      <section class="mb-16" aria-labelledby="features-title">
        <h2 id="features-title" class="text-3xl font-semibold text-gray-900 mb-8 text-center">Características principales</h2>
        <ul class="grid grid-cols-1 md:grid-cols-2 gap-6">
          {project.features.map((feature) => (
            <li class="flex items-start space-x-3 bg-white p-4 rounded-lg shadow-md transition-all duration-300 hover:shadow-lg">
              <Icon name="mdi:check-circle" class="w-6 h-6 text-green-500 flex-shrink-0" />
              <span class="text-lg text-gray-700">{feature}</span>
            </li>
          ))}
        </ul>
      </section>

      <!-- Sección de tecnologías utilizadas -->
      <section class="mb-16" aria-labelledby="technologies-title">
        <h2 id="technologies-title" class="text-3xl font-semibold text-gray-900 mb-8 text-center">Tecnologías utilizadas</h2>
        <div class="flex flex-wrap justify-center gap-4">
          {project.technologies.map((tech) => (
            <span class="bg-blue-100 text-blue-800 text-sm font-medium px-4 py-2 rounded-full transition-all duration-300 hover:bg-blue-200 hover:text-blue-900">
              {tech}
            </span>
          ))}
        </div>
      </section>

      <!-- Botones de Google Play y GitHub -->
      <section class="flex flex-col sm:flex-row justify-center items-center gap-6">
        <a
          href={project.playStoreUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center justify-center bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-6 rounded-lg transition duration-300 w-full sm:w-auto focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
        >
          <Icon name="mdi:google-play" class="w-6 h-6 mr-2" />
          Ver en Google Play
        </a>
        <a
          href={project.githubUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center justify-center bg-gray-800 hover:bg-gray-900 text-white font-bold py-3 px-6 rounded-lg transition duration-300 w-full sm:w-auto focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500"
        >
          <Icon name="mdi:github" class="w-6 h-6 mr-2" />
          Ver código en GitHub
        </a>
      </section>
    </div>
  </main>
</Layout>

<!-- Lightbox para mostrar imágenes más grandes -->
<div id="lightbox" class="fixed inset-0 bg-black bg-opacity-90 hidden items-center justify-center z-50">
  <button id="closeLightbox" class="absolute top-4 right-4 text-white text-4xl">&times;</button>
  <img id="lightboxImage" src="" alt="Screenshot en tamaño completo" class="max-w-full max-h-full object-contain" />
</div>

<style>
  .animate-fade-in {
    animation: fadeIn 0.5s ease-out;
  }
  .animate-fade-in-up {
    animation: fadeInUp 0.5s ease-out;
  }
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  @keyframes fadeInUp {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }
</style>

<script>
function openLightbox(imageSrc: string) {
  const lightbox = document.getElementById('lightbox');
  const lightboxImage = document.getElementById('lightboxImage') as HTMLImageElement; // Cast a HTMLImageElement
  if (lightbox && lightboxImage) {
    lightboxImage.src = imageSrc;
    lightbox.classList.remove('hidden');
    lightbox.classList.add('flex');
  }
}


  document.getElementById('closeLightbox')?.addEventListener('click', () => {
    const lightbox = document.getElementById('lightbox');
    if (lightbox) {
      lightbox.classList.add('hidden');
      lightbox.classList.remove('flex');
    }
  });

  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      const lightbox = document.getElementById('lightbox');
      if (lightbox && !lightbox.classList.contains('hidden')) {
        lightbox.classList.add('hidden');
        lightbox.classList.remove('flex');
      }
    }
  });
</script>
